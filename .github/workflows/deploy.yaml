name: Bygg og deploy prod

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    env:
      NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      SKIP_YARN_COREPACK_CHECK: true
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com
          cache: yarn
      - name: Enable Corepack
        run: corepack enable
      - name: Cache client node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.next/cache
            node_modules
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - name: install dependencies Yarn
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - run: yarn typeCheck
      - run: yarn test
      - run: yarn run build

      - uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: detsombetyrnoe
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

      - uses: nais/deploy/actions/deploy@v2
        env:
          PRINT_PAYLOAD: true
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/dev.yaml
          VAR: image=${{ steps.docker-build-push.outputs.image }}

      - uses: nais/deploy/actions/deploy@v2
        env:
          PRINT_PAYLOAD: true
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/prod.yaml
          VAR: image=${{ steps.docker-build-push.outputs.image }}
